{"version":3,"sources":["pages/auth/login/style.module.scss","http/auth.js","pages/auth/login/index.tsx"],"names":["module","exports","login","data","http","url","method","Login","loading","LoadingStatus","None","values","a","setState","Loading","result","localforage","setItem","BIZ_AUTH","window","open","notification","error","message","Complete","e","preventDefault","this","state","className","styles","container","content","span","main","layout","onFinish","handleSubmit","Item","label","name","rules","required","size","type","style","textAlign","htmlType","block","onClick","handleRegistry","React"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,QAAU,uBAAuB,KAAO,oBAAoB,MAAQ,qBAAqB,aAAa,0BAA0B,cAAc,2BAA2B,YAAY,yBAAyB,iBAAmB,kC,4KCCjR,SAASC,EAAOC,GACrB,OAAOC,YAAK,CACVC,IAAK,QACLC,OAAQ,OACRH,S,kHCMiBI,E,8OACX,CACNC,QAASC,IAAcC,O,iFAGV,WAAOC,GAAP,eAAAC,EAAA,6DACb,EAAKC,SAAS,CACZL,QAASC,IAAcK,UAFZ,kBAKUZ,EAAMS,GALhB,cAKLI,EALK,gBAMLC,IAAYC,QAAQC,IAAUH,GANzB,OAOXI,OAAOC,KAAK,IAAK,SAPN,kDASXC,IAAaC,MAAM,CACjBC,QAAS,6BAVA,yBAaX,EAAKV,SAAS,CACZL,QAASC,IAAce,WAdd,6E,oGAmBE,SAACC,GAChBA,EAAEC,oB,4CAGJ,WACE,IAAOlB,EAAWmB,KAAKC,MAAhBpB,QACP,OACE,qBAAKqB,UAAWC,IAAOC,UAAvB,SACE,eAAC,IAAD,CAAKF,UAAWC,IAAOE,QAAvB,UACE,cAAC,IAAD,CAAKC,KAAM,GAAIJ,UAAWC,IAAOI,OACjC,cAAC,IAAD,CAAKD,KAAM,GAAIJ,UAAWC,IAAO5B,MAAjC,SACE,sBAAK2B,UAAWC,IAAQ,cAAxB,UACE,qBAAKD,UAAWC,IAAQ,eAAxB,SACE,gDAEF,eAAC,IAAD,CAAMK,OAAO,WAAWC,SAAUT,KAAKU,aAAvC,UACE,cAAC,IAAKC,KAAN,CACEC,MAAM,qBACNC,KAAK,QACLC,MAAO,CACL,CACEC,UAAU,EACVnB,QAAS,mCANf,SAUE,cAAC,IAAD,CAAOoB,KAAK,YAEd,cAAC,IAAKL,KAAN,CACEC,MAAM,eACNC,KAAK,WACLC,MAAO,CACL,CACEC,UAAU,EACVnB,QAAS,mCANf,SAUE,cAAC,IAAD,CAAOqB,KAAK,WAAWD,KAAK,YAE9B,cAAC,IAAKL,KAAN,CAAWO,MAAO,CAACC,UAAW,UAA9B,SACE,cAAC,IAAD,CACEF,KAAK,UACLG,SAAS,SACTlB,UAAWC,IAAQ,aACnBtB,QAASA,IAAYC,IAAcK,QACnC6B,KAAK,QACLK,OAAK,EANP,+BAYJ,8BACE,iCACE,kEACA,mBAAGC,QAAStB,KAAKuB,eAAjB,6C,GAhFiBC","file":"static/js/9.cfb6a94b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__1MLUn\",\"content\":\"style_content__pdbuN\",\"main\":\"style_main__xdfcJ\",\"login\":\"style_login__2qp9C\",\"login-body\":\"style_login-body__-lWND\",\"login-title\":\"style_login-title___mPsl\",\"login-btn\":\"style_login-btn__4Jgb-\",\"registry_success\":\"style_registry_success__2ZGOk\"};","import {http} from './http';\n\nexport function login (data) {\n  return http({\n    url: '/auth',\n    method: 'post',\n    data\n  });\n}\n\n// export function fetchEntities () {\n//   return http({\n//     url: '/entity/list',\n//     method: 'get'\n//   });\n// }\n","import {LoadingStatus} from '@src/components/LoadingContainer';\nimport {login} from '@src/http/auth';\nimport {Button, Col, Form, Input, notification, Row} from 'antd';\nimport * as React from 'react';\nimport localforage from 'localforage';\nimport styles from './style.module.scss';\nimport {BIZ_AUTH} from '@src/common/constants/token';\n\ntype LoginState = {\n  loading: LoadingStatus;\n};\n\nexport default class Login extends React.Component<any, LoginState> {\n  state = {\n    loading: LoadingStatus.None\n  };\n\n  handleSubmit = async (values: any) => {\n    this.setState({\n      loading: LoadingStatus.Loading\n    });\n    try {\n      const result = await login(values);\n      await localforage.setItem(BIZ_AUTH, result);\n      window.open('/', '_self');\n    } catch (e) {\n      notification.error({\n        message: '登陆失败'\n      });\n    } finally {\n      this.setState({\n        loading: LoadingStatus.Complete\n      });\n    }\n  };\n\n  handleRegistry = (e: React.MouseEvent) => {\n    e.preventDefault();\n    // this.props.onSwitch('registry');\n  };\n  render () {\n    const {loading} = this.state;\n    return (\n      <div className={styles.container}>\n        <Row className={styles.content}>\n          <Col span={14} className={styles.main}></Col>\n          <Col span={10} className={styles.login}>\n            <div className={styles[ 'login-body' ]}>\n              <div className={styles[ 'login-title' ]}>\n                <h2>登陆</h2>\n              </div>\n              <Form layout=\"vertical\" onFinish={this.handleSubmit}>\n                <Form.Item\n                  label=\"用户名\"\n                  name=\"email\"\n                  rules={[\n                    {\n                      required: true,\n                      message: '用户名为空'\n                    }\n                  ]}\n                >\n                  <Input size=\"large\" />\n                </Form.Item>\n                <Form.Item\n                  label=\"密码\"\n                  name=\"password\"\n                  rules={[\n                    {\n                      required: true,\n                      message: '用户名为空'\n                    }\n                  ]}\n                >\n                  <Input type=\"password\" size=\"large\" />\n                </Form.Item>\n                <Form.Item style={{textAlign: 'center'}}>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className={styles[ 'login-btn' ]}\n                    loading={loading === LoadingStatus.Loading}\n                    size=\"large\"\n                    block\n                  >\n                    登陆\n                  </Button>\n                </Form.Item>\n              </Form>\n              <div>\n                <span>\n                  <span>没有账号？</span>\n                  <a onClick={this.handleRegistry}>注册</a>\n                </span>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}