{"version":3,"sources":["pages/settings/ChangePassword/style.module.scss","pages/settings/ChangePassword/index.tsx"],"names":["module","exports","layout","labelCol","span","wrapperCol","tailLayout","offset","ChangePassword","props","useState","loading","setLoading","Form","useForm","form","onFinish","values","a","asyncChangePassword","oldPassword","newPassword","message","success","setTimeout","OperatorStore","logout","error","className","styles","Item","name","label","rules","required","min","placeholder","validator","_rule","value","callback","getFieldValue","type","htmlType"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,iBAAiB,gC,0KCO7BC,EAAS,CACbC,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,KAEfE,EAAa,CACjBD,WAAY,CAACE,OAAQ,EAAGH,KAAM,KAkFjBI,UAhFiC,SAACC,GAC/C,MAA8BC,oBAAkB,GAAhD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAeC,IAAKC,UAAbC,EAAP,oBACMC,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACfN,GAAW,GADI,kBAGPO,YAAoB,CAACC,YAAaH,EAAOG,YAAaC,YAAaJ,EAAOI,cAHnE,OAIbC,IAAQC,QAAQ,4BAChBC,YAAW,WACTC,IAAcC,WACb,KAPU,gDASbJ,IAAQK,MAAM,wCATD,yBAWbf,GAAW,GAXE,4EAAH,sDAmCd,OACE,qBAAKgB,UAAWC,IAAM,UAAtB,SACE,eAAC,IAAD,yBAAM3B,OAAO,WAAW0B,UAAWC,IAAO,mBAAuB3B,GAAjE,IAAyEa,KAAMA,EAAMC,SAAUA,EAA/F,UACE,cAAC,IAAKc,KAAN,CAAWC,KAAK,cAAcC,MAAM,sBAAOC,MAAO,CAAC,CAACC,UAAU,GAAO,CAACC,IAAK,IAA3E,SACE,cAAC,IAAD,CAAOC,YAAY,2CAErB,cAAC,IAAKN,KAAN,CACEC,KAAK,cACLC,MAAM,qBACNC,MAAO,CACL,CAACC,UAAU,GACX,CAACC,IAAK,GACN,CACEE,UAjCiB,SAACC,EAAYC,EAAYC,GACpD,IAAMpB,EAAcL,EAAK0B,cAAc,eACnCF,GACEA,IAAUnB,GACZoB,EAAS,sEAGbA,OAmBI,SAWE,cAAC,IAAD,CAAOJ,YAAY,2CAErB,cAAC,IAAKN,KAAN,CACEC,KAAK,qBACLC,MAAM,iCACNC,MAAO,CACL,CAACC,UAAU,GACX,CAACC,IAAK,GACN,CACEE,UApC2B,SAACC,EAAYC,EAAYC,GAC9D,IAAMnB,EAAcN,EAAK0B,cAAc,eACnCF,GACEA,IAAUlB,GACZmB,EAAS,sEAGbA,OAsBI,SAWE,cAAC,IAAD,CAAOJ,YAAY,2CAErB,cAAC,IAAKN,KAAN,2BAAexB,GAAf,aACE,cAAC,IAAD,CAAQoC,KAAK,UAAUC,SAAS,SAAShC,QAASA,EAAlD","file":"static/js/10.48f4a394.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container-form\":\"style_container-form__2dM6W\"};","import React, {FC, useState} from 'react';\nimport {ChangePasswordProps} from './stypes';\nimport FormItem from 'antd/lib/form/FormItem';\nimport {Button, Form, Input, message} from 'antd';\nimport styles from './style.module.scss';\nimport { asyncChangePassword } from '@src/http';\nimport OperatorStore from '@src/operator';\n\nconst layout = {\n  labelCol: {span: 8},\n  wrapperCol: {span: 16},\n};\nconst tailLayout = {\n  wrapperCol: {offset: 8, span: 16},\n};\nconst ChangePassword: FC<ChangePasswordProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [form] = Form.useForm();\n  const onFinish = async (values: any) => {\n    setLoading(true);\n    try {\n      await asyncChangePassword({oldPassword: values.oldPassword, newPassword: values.newPassword})\n      message.success(\"更新成功\");\n      setTimeout(() => {\n        OperatorStore.logout();\n      }, 1000);\n    } catch(err) {\n      message.error(\"密码更新失败\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const newPasswordValidator = (_rule: any, value: any, callback: (...data: any) => void) => {\n    const oldPassword = form.getFieldValue('oldPassword');\n    if (value) {\n      if (value === oldPassword) {\n        callback('新密码不能与旧密码相同');\n      }\n    }\n    callback();\n  };\n\n  const newConformNewPasswordValdiator = (_rule: any, value: any, callback: (...data: any) => void) => {\n    const newPassword = form.getFieldValue('newPassword');\n    if (value) {\n      if (value !== newPassword) {\n        callback('确认密码与新密码不相同');\n      }\n    }\n    callback();\n  };\n\n  return (\n    <div className={styles['container']}>\n      <Form layout=\"vertical\" className={styles['container-form']} {...layout} form={form} onFinish={onFinish}>\n        <Form.Item name=\"oldPassword\" label=\" 旧密码\" rules={[{required: true}, {min: 6}]}>\n          <Input placeholder=\"请输入旧密码\" />\n        </Form.Item>\n        <Form.Item\n          name=\"newPassword\"\n          label=\"新密码\"\n          rules={[\n            {required: true},\n            {min: 6},\n            {\n              validator: newPasswordValidator,\n            },\n          ]}\n        >\n          <Input placeholder=\"请输入新密码\" />\n        </Form.Item>\n        <Form.Item\n          name=\"confirmNewPassword\"\n          label=\"确认新密码\"\n          rules={[\n            {required: true},\n            {min: 6},\n            {\n              validator: newConformNewPasswordValdiator,\n            },\n          ]}\n        >\n          <Input placeholder=\"请确认新密码\" />\n        </Form.Item>\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default ChangePassword;\n"],"sourceRoot":""}