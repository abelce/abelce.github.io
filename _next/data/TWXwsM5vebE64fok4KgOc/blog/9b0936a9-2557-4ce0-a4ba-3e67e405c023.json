{"pageProps":{"data":{"category":{"id":"cd4e8a1e-80d0-49d5-bbd6-d2bc7d7ce3e9","name":"前端"},"content":"\n>  依赖注入在程序编写中常用于解决耦合问题，减少代码的复杂性，。\n\n在电商网站上买东西，下完单后就需要支付，可以选择微信、支付宝、信用卡等方式。最开始只有微信支付。\n\n```js\nclass Order {\n  \n  // 微信支付\n  wechatPay() {\n    new WeChatPay().pay();\n  }\n  \n}\n```\n\n一段时间之后需要接入支付宝、信用卡。每新增一种支付方式就需要在里面加一个对应的方法。这样代码的灵活性就不高。而且Order强耦合了所有的支付方式。Order类依赖了WechatPay类、Alipay类、CreditCard类。\n\n```js\nclass Order {\n  \n  // 微信支付\n  wechatPay() {\n    new WechatPay().pay();\n  }\n  // 支付宝\n  alipay() {\n    new Alipay().pay();\n  }\n  // 信用卡\n  crditCard() {\n    new CreditCard().pay();\n  }\n}\n```\n\n那么可不可以解除这种依赖关系，将Order对其他类的控制权交给第三方呢，依赖注入可以实现，将支付方式交给第三方注入到Order类中，Order只需要调用需要的方法即可。\n\n```js\nclass Order {\n  \n  constructor({payMethod}) {\n    this._payMethod = payMethod;\n  }\n  \n  pay() {\n    this._payMethod.pay();\n  }\n}\n\nfunction getMethodPay (name) {\n  return {\n    wechatPay: new WechatPay(),\n    alipay: new Alipay(),\n    crditCard: new CreditCard()\n  }[name];\n}\n\nconst order = new Order({\n  payMethod: getMethodPay(\"wechatPay\")\n})\n\norder.pay();\n```\n\n先找到需要的支付方式，传入到Order中，Order不关心传入的是哪种支付方式，只需要调用对用的支付方法即可。","createTime":1654046061196,"creativeType":"original","description":"\n 依赖注入在程序编写中常用于解决耦合问题，减少代码的复杂性，。\n\n在电商网站上买东西，下完单后就需要支付，可以选择微信、支付宝、信用卡等方式。最开始只有微信支付。\n\njs\nclass Order {\n  \n   微信支付\n  wechatPay() {\n    new WeChatPay().pay();\n  }\n  \n}\n\n\n一段时间之后需要接入支付宝、信用卡。每新增一种支","headerImg":"","id":"9b0936a9-2557-4ce0-a4ba-3e67e405c023","isDeleted":false,"likeCount":0,"name":"依赖注入","operator":{"avatar":"","description":"","github":"","id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"a2"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["依赖注入"],"updateTime":1654047697168,"viewCount":162},"id":"9b0936a9-2557-4ce0-a4ba-3e67e405c023","latestArticleList":[{"id":"b8997e5c-988d-4f9b-9637-143bf0219042","name":"Macos已损坏，无法打开。 您应该将它移到废纸篓。","tags":[],"description":"","content":""},{"id":"26d50f26-364c-4989-a661-0dcbe063ad89","name":"前端原生API识别条形码","tags":[],"description":"","content":""},{"id":"fefb5ef1-b0be-441b-93c7-80907d0d4399","name":"Web Notifcation介绍","tags":[],"description":"","content":""},{"id":"fbccb2e8-8934-4ffb-b205-0bdde8a8c61f","name":"js实现页面title闪烁","tags":[],"description":"","content":""},{"id":"466b23fe-2f73-44b1-9e97-fe552c793e80","name":"css outline","tags":[],"description":"","content":""}]},"initialMobxState":{"userStore":{"currentUser":null,"users":[],"token":"","qiniuToken":"","userCount":0,"productCount":0,"commentCount":0,"settingType":"products"},"productStore":{"products":[],"total":0,"type":"","url":"","current":1,"product":null,"likesMap":{},"tabpane":"all","token":"","loading":false,"todayHunters":[],"today":[],"yesterday":[],"relatedProducts":[],"search":""},"commentStore":{"comments":[],"total":0,"current":0},"noteStore":{"token":"","notes":[],"total":0,"note":null},"askStore":{"token":"","asks":[],"total":0,"ask":null},"stypeStore":{"data":[]}},"__N_SSG":true}