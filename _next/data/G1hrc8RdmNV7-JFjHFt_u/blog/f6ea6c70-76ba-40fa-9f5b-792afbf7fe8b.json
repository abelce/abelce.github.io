{"pageProps":{"data":{"category":{"id":"4f3a95af-c55c-4bad-89dd-ef5b02056140","name":"后端"},"content":"\n\n首先吐槽一下又拍云的文档，需要有亿点改进。\n\n由于我是前端上传，官网没有js sdk，所以需要结合后端来生成签名和policy。\n\n前端使用的是form api的方式上传。\n\n\n\n### 后端\n\n直接上后端代码（golang）：\n\n```go\npackage application\n\nimport (\n\t\"crypto/hmac\"\n\t\"crypto/md5\"\n\t\"crypto/sha1\"\n\t\"encoding/base64\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"strings\"\n\t\"time\"\n)\n\ntype Upyun struct {\n\tToken  string `json:\"token\"`\n\tDate   string `json:\"date\"`\n\tPolicy string `json:\"policy\"`\n}\n\nfunc makeSaveKey() string {\n\treturn \"/{year}/{mon}/{day}/upload_{random32}{.suffix}\"\n}\n\nfunc makePolicy(bucket, saveKey string) string {\n  // 过期时间设置为一天。\n\texpiration := time.Now().AddDate(0, 0, 1).Unix()\n\tobj := struct {\n\t\tBucket     string `json:\"bucket\"`\n\t\tSaveKey    string `json:\"save-key\"`\n\t\tExpiration int64  `json:\"expiration\"`\n\t\t// Date       string `json:\"date\"`\n\t}{\n\t\tBucket:     bucket,\n\t\tSaveKey:    saveKey,\n\t\tExpiration: expiration,\n\t\t// Date:       date,\n\t}\n\n\tstr, err := json.Marshal(&obj)\n\tif err != nil {\n\t\treturn \"\"\n\t}\n\n\tsEnc := base64.StdEncoding.EncodeToString([]byte(str))\n\treturn sEnc\n}\n\nfunc md5Str(s string) string {\n\treturn fmt.Sprintf(\"%x\", md5.Sum([]byte(s)))\n}\nfunc makeRFC1123Date(d time.Time) string {\n\tutc := d.UTC().Format(time.RFC1123)\n\treturn strings.Replace(utc, \"UTC\", \"GMT\", -1)\n}\nfunc base64ToStr(b []byte) string {\n\treturn base64.StdEncoding.EncodeToString(b)\n}\nfunc sign(key, secret, method, uri, date, policy, md5 string) string {\n\tmac := hmac.New(sha1.New, []byte(secret))\n\telems := []string{}\n\tfor _, v := range []string{method, uri, date, policy, md5} {\n\t\tif v != \"\" {\n\t\t\telems = append(elems, v)\n\t\t}\n\t}\n\tvalue := strings.Join(elems, \"&\")\n\tmac.Write([]byte(value))\n\tsignStr := base64ToStr(mac.Sum(nil))\n\treturn \"UPYUN \" + key + \":\" + signStr\n}\n\nfunc GetUpyunToken(key, secret, bucket, method string) *Upyun {\n\tdate := makeRFC1123Date(time.Now())\n\tsaveKey := makeSaveKey()\n\tpolicy := makePolicy(bucket, saveKey)\n\ttoken := sign(key, md5Str(secret), method, \"/\"+bucket, \"\", policy, \"\")\n\n\tupyun := Upyun{\n\t\tDate:   date,\n\t\tToken:  token,\n\t\tPolicy: policy,\n\t}\n\n\treturn &upyun\n}\n\n```\n\n说说遇到的坑，\n\n1. 签名和policy中不要设置date数据，不然前端上传时的时间与签名和policy中的时间对不上。\n\n2. 调用**sign**方法时method参数后一个参数在拼接时需要加上/，不然签名不对，比如下面这样。\n\n   ```\n   method&/uri&policy\n   ```\n\n上面的问题是在客服技术人员的耐心指导下调通的。在此感谢技术大佬。\n\n\n\n### 前端\n\n前端使用的antd的upload组件，\n\n```jsx\n<Upload\n  name=\"file\"\n  method={'POST'}\n  listType=\"picture-card\"\n  className=\"avatar-uploader\"\n  showUploadList={false}\n  action={`https://v0.api.upyun.com/${bucketName}`}\n  beforeUpload={beforeUpload}\n  onChange={handleChange}\n  data={{\n    authorization: xxxx,\n    policy: xxx,\n  }}\n  >\n  {value ? <img src={value} alt=\"avatar\" style={{width: '100%'}} /> : uploadButton}\n</Upload>\n```\n\n\n\n由于签名需要涉及到密码，放在服务器上生成比较安全，前端使用即可。\n\n\n\n\n\n","createTime":1657503681084,"creativeType":"original","description":"\n\n首先吐槽一下又拍云的文档，需要有亿点改进。\n\n由于我是前端上传，官网没有js sdk，所以需要结合后端来生成签名和policy。\n\n前端使用的是form api的方式上传。\n\n\n\n 后端\n\n直接上后端代码（golang）：\n\ngo\npackage application\n\nimport (\n\t\"crypto/hmac\"\n\t\"crypto/md5\"\n\t\"crypto/sha1\"\n\t\"","headerImg":"//file.vwood.xyz/2022/07/11/upload_zowr0rxe5g7imar24xz5tfxpzcnylz8h.jpg","id":"f6ea6c70-76ba-40fa-9f5b-792afbf7fe8b","isDeleted":false,"likeCount":0,"name":"记又拍云接入过程","operator":{"avatar":"","description":"","github":"","id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"a2"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["又拍云","签名","policy"],"updateTime":1657503835129,"viewCount":79},"id":"f6ea6c70-76ba-40fa-9f5b-792afbf7fe8b","latestArticleList":[{"id":"b3c8f2ad-6fe6-4afb-b16d-ec7af9aa92e2","name":"iconfont-extract: 一个将iconfont图标转化为React组件的工具","tags":[],"description":"","content":""},{"id":"b8997e5c-988d-4f9b-9637-143bf0219042","name":"Macos已损坏，无法打开。 您应该将它移到废纸篓。","tags":[],"description":"","content":""},{"id":"26d50f26-364c-4989-a661-0dcbe063ad89","name":"前端原生API识别条形码","tags":[],"description":"","content":""},{"id":"fefb5ef1-b0be-441b-93c7-80907d0d4399","name":"Web Notifcation介绍","tags":[],"description":"","content":""},{"id":"fbccb2e8-8934-4ffb-b205-0bdde8a8c61f","name":"js实现页面title闪烁","tags":[],"description":"","content":""}]},"initialMobxState":{"userStore":{"currentUser":null,"users":[],"token":"","qiniuToken":"","userCount":0,"productCount":0,"commentCount":0,"settingType":"products"},"productStore":{"products":[],"total":0,"type":"","url":"","current":1,"product":null,"likesMap":{},"tabpane":"all","token":"","loading":false,"todayHunters":[],"today":[],"yesterday":[],"relatedProducts":[],"search":""},"commentStore":{"comments":[],"total":0,"current":0},"noteStore":{"token":"","notes":[],"total":0,"note":null},"askStore":{"token":"","asks":[],"total":0,"ask":null},"stypeStore":{"data":[]}},"__N_SSG":true}