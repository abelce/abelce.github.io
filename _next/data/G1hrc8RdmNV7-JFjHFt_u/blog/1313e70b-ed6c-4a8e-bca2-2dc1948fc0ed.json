{"pageProps":{"data":{"category":{"id":"de603bf9-e2dd-4eb4-aee0-c48d86eea130","name":"css"},"content":"通常我们根据css的媒体查询来设置特定条件下的样式，比如根据浏览器视口宽度来设置不同的样式；\n\n```css\n@media screen and (min-width: 300px) {\n    .element {\n        //...\n    }\n}\n```\n\n这里的 `and` 操作符，允许我们合并语句，即媒体类型是屏幕，宽度大于等于300px时的样式，同时我们也可以对一个范围内的视口做同样额操作。\n\n```css\n// 当视口宽度在300px - 500px之间\n@media screen and (min-width: 300px) and (max-width: 500px){\n    .element {\n        //...\n    }\n}\n```\n\n现在 Media Queries Level 4 中引入了一个新的语法，使用常见的 > 、< 和 = 来指定视口的宽度值，在语法上更直观，同时代码量更少。\n\n\n## 一、 新的操作符\n\n新的操作符如下：\n+ < : 计算一个值是否小于另一个值\n+ \\> : 计算一个值是否大于另一个值\n+ \\= : 计算一个值是否等于另一个值\n+ <=: 计算一个值是否小于等于另一个值\n+ \\>=: 计算一个值是否大于等于另一个值\n\n下面我们写一个媒体查询，应用在浏览器大于等于300px：\n\n```css\n@media (min-width: 300px) {\n    .element {\n        //...\n    }\n}\n```\n\n下面使用比较操作符编写相同的内容:\n```css\n@media (width >= 300px) {\n    .element {\n        //...\n    }\n}\n```\n可以看到新的语法在感官上更容易理解。\n\n## 二、 指定一个视口范围\n\n通常我们当我们编写css媒体查询时，会创建一个断点，并对其应用一组样式。设计的时候可以是一堆断点，\n\n下面是使用 `and` 操作符结合两个断点值：\n\n```css\n// 当视口宽度在300px - 500px之间\n@media screen and (min-width: 300px) and (max-width: 500px){\n    .element {\n        //...\n    }\n}\n```\n\n使用心得语法后，就会更加的剪短和易懂\n```css\n// 当视口宽度在300px - 500px之间\n@media  (300px <= width <= 500px) {\n    .element {\n        //...\n    }\n}\n```\n\n你可以点击这里查看示例[css媒体查询新特性](https://vwood.xyz/study/css-media-query-range-size.html)\n\n## 三、 新语法解决了哪些痛点\n\n+ min-width 操作表示width大于等于某个值（比如 min-width: 300px，表示 300px <= width）\n+ max-width 操作表示width大于等于某个值（比如 max-width: 300px，表示  width <= 300px）\n\n当在300px作为临界点，使用min-wdith、max-width来定义不同的样式：\n```css\n@media  (max-width: 300px) {}\n@media  (min-width: 300px) {}\n```\n\n会发现这两个条件都匹配视口为300px的情况，并不是我们想要的效果，我们只想要其中一个匹配，所以需要改动其中一个条件的值。\n```css\n@media  (max-width: 300px) {}\n@media  (min-width: 300.01px) {}\n```\n虽然这样解决了问题，但这并不是一种合理的解决方法，新的语法可以完美的解决这个问题。\n\n```css\n@media  (width <= 300px) {}\n@media  (width > 300px) {}\n```\n\n## 四、兼容性\n\n目前crome、firefox均已支持该特性，safari还不支持，可以在个人项目中尝试使用。\n![](https://file.vwood.xyz/2022/11/02/upload_sy6a0cwcempqcnm29at842o1gf0kxto7.png)\n","createTime":1667400964186,"creativeType":"original","description":"通常我们根据css的媒体查询来设置特定条件下的样式，比如根据浏览器视口宽度来设置不同的样式；\n\ncss\n@media screen and (min-width: 300px) {\n    .element {\n        ...\n    }\n}\n\n\n这里的 and 操作符，允许我们合并语句，即媒体类型是屏幕，宽度大于等于300px时的样式，同时我们也可以对一个范围内的视口","headerImg":"//file.vwood.xyz/2022/11/02/upload_x3lweuws5gwv4gyrprraxr90lsdaivp7.jpg","id":"1313e70b-ed6c-4a8e-bca2-2dc1948fc0ed","isDeleted":false,"likeCount":0,"name":"css媒体查询新特性","operator":{"avatar":"","description":"","github":"","id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"a2"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["css","media","操作符"],"updateTime":1667636079659,"viewCount":0},"id":"1313e70b-ed6c-4a8e-bca2-2dc1948fc0ed","latestArticleList":[{"id":"b3c8f2ad-6fe6-4afb-b16d-ec7af9aa92e2","name":"iconfont-extract: 一个将iconfont图标转化为React组件的工具","tags":[],"description":"","content":""},{"id":"b8997e5c-988d-4f9b-9637-143bf0219042","name":"Macos已损坏，无法打开。 您应该将它移到废纸篓。","tags":[],"description":"","content":""},{"id":"26d50f26-364c-4989-a661-0dcbe063ad89","name":"前端原生API识别条形码","tags":[],"description":"","content":""},{"id":"fefb5ef1-b0be-441b-93c7-80907d0d4399","name":"Web Notifcation介绍","tags":[],"description":"","content":""},{"id":"fbccb2e8-8934-4ffb-b205-0bdde8a8c61f","name":"js实现页面title闪烁","tags":[],"description":"","content":""}]},"initialMobxState":{"userStore":{"currentUser":null,"users":[],"token":"","qiniuToken":"","userCount":0,"productCount":0,"commentCount":0,"settingType":"products"},"productStore":{"products":[],"total":0,"type":"","url":"","current":1,"product":null,"likesMap":{},"tabpane":"all","token":"","loading":false,"todayHunters":[],"today":[],"yesterday":[],"relatedProducts":[],"search":""},"commentStore":{"comments":[],"total":0,"current":0},"noteStore":{"token":"","notes":[],"total":0,"note":null},"askStore":{"token":"","asks":[],"total":0,"ask":null},"stypeStore":{"data":[]}},"__N_SSG":true}