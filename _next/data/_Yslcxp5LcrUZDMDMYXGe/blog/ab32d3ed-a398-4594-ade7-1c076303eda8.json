{"pageProps":{"data":{"category":{"id":"cd4e8a1e-80d0-49d5-bbd6-d2bc7d7ce3e9","name":"前端"},"content":"> 最近在做一个主页时需要用国际化，用HTML+JS，还有jQuery, 于是就选择了jquery.i18n.properties.js。本文介绍的示例还依赖jquery、jquery.json。\n\n#### 介绍\n\njquery.i18n.properties是一款轻量级的国际化插件，采用.properties文件来对javascript文件进行国际化，即根据用户指定的语言和国家编码来解析对应的以\".properties\"为后缀的文件。\n\n```shell\nmessages.properties\nmessages_zh_CN.properties\nmessages_en_US.properties\n```\n#### API\n\njQuery.i18n.properties相对于其他的插件，只有少量的API，即$.i18n.properties()、$.i18n.prop()、$.i18n.normaliseLanguageCode()等:\n\n##### jQuery.i18n.properties\n\n| 选项 | 描述 | 类型 | 可选 |\n| :--- | :--- | :--- | :--- |\n| name | 资源文件的名称 | string \\| [string] | 否 |\n| language |  指定语言编码： （en： 英文， zh： 中文），或者同时指定语言编码和国家编码(例如： zh_CN, en_US)等 | string | 是 |\n| path | 资源文件所在的路径 | string | 否 |\n| mode | 加载模式： “vars”表示以javascript变量和函数的形式使用文件中的key，“map”表示以Map的方式使用文件中的key，“both”表示可以同时使用两种方式。如果资源文件中的key包含javascript中的关键字，只能使用map。默认值是vars。| string | 是 |\n| cache | 指定浏览器是否缓存资源文件，默认false | boolean | 是 |\n| encoding | 指定加载资源文件时的编码格式，默认utf-8 | string | 是 |\n| debug | 控制台是否记录记录log | boolean | 是 |\n| async | 指定调用callback（回调）函数的方式，false: 所有的资源文件加载请求发送完毕后就调用回调函数， true：所有的资源加载并解析完成后才调用回调函数。默认false | boolean | 是 |\n| namespace | 指定资源文件的keys被存放在namespace下，即$.i18n.properties[namespace][key], 使用namespace可以最大限度的减少冲突和重写的概率; 默认为null不使用namespace | string | 是 |\n| callback | 方法执行完的回调函数 | function | 是 |\n\n```js\njQuery.i18n.properties({\n    name:'Messages', \n    path:'bundle/', \n    mode:'both',\n    language:'pt_BR',\n    async: true,\n    callback: function() {\n        $('#content).html($.i18n.prop('msg_hello'));\n    }\n});\n```\n\n#####  $.i18n.prop(key)\n通过key以Map的形式获取资源文件中对应的值\n\n```js\n $('#content).html($.i18n.prop('msg_hello'));\n```\n\n##### $.i18n.normaliseLanguageCode(settings)\n1. 当settings没有language属性或language属性值不符合规范时，获取浏览器的语言编码，格式化并返回语言编码。\n2. 当settings中language满足要求时，格式化并返回语言编码。\n\n\n#### 实例\n\n本项目是运行在**nginx**上的，关于nginx的安装和配置，同学们自行解决\\^v\\^\n\n##### 依赖引入\n\n```html\n<script src=\"lib/jquery/jquery-3.2.1.min.js\"></script>\n<script src=\"lib/i18n/jquery.json.min.js\"></script>\n<script src=\"lib/i18n/jquery.i18n.properties.js\"></script>\n```\n\n\n##### html\n\n```html\n<div>\n    <p id=\"text\"></p>\n    <button onclick=\"switchLang()\" id=\"lang\"></button>\n</div>\n```\n\n\n#### index.js\n\n```js\nvar LANGUAGE_CODE = \"en_US\"; //标识语言\n\nfunction loadProperties(type) {\n    jQuery.i18n.properties({\n        name: 'strings', // 资源文件名称\n        path: 'static/', // 资源文件所在目录路径\n        mode: 'map', // 模式：变量或 Map \n        language: type, // 对应的语言\n        cache: false,\n        encoding: 'UTF-8',\n        callback: function () { // 回调方法    \n            $('#text').html($.i18n.prop('string_text'));\n            $('#lang').html($.i18n.prop('string_lang'));\n        }\n    });\n}\n\nfunction switchLang() {\n    LANGUAGE_CODE = LANGUAGE_CODE == 'zh_CN' ? 'en_US' : 'zh_CN';\n    loadProperties(LANGUAGE_CODE);\n}\n\n$(document).ready(function () {\n    LANGUAGE_CODE = jQuery.i18n.normaliseLanguageCode({}); //获取浏览器的语言     \n    loadProperties(LANGUAGE_CODE);\n})\n```\n\n##### 资源文件(.properties)文件\n\nstrings\\_en\\_US.properties:\n\n```shell\nstring_text=Hello world!\nstring_lang=Chinese\n```\n\nstrings\\_zh\\_CN.properties: \n\n```shell\nstring_text=你好，世界！\nstring_lang=英文\n```\n\n##### 运行效果\n\n###### 中文\n![](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2FiZWxjZS9zdGF0aWNSZXNvdXJjZS9tYXN0ZXIvaW1hZ2VzLyVFNCVCOCVBRCVFNiU5NiU4Ny5wbmc?x-oss-process=image/format,png)\n\n\n##### 英文\n![](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2FiZWxjZS9zdGF0aWNSZXNvdXJjZS9tYXN0ZXIvaW1hZ2VzLyVFOCU4QiVCMSVFNiU5NiU4Ny5wbmc?x-oss-process=image/format,png)\n\n以上就是实例的所有代码，可以点击这里 [下载示例](https://github.com/abelce/jquery_i18n_properties)\n\n-----\n\n**以上就是本次学习到的知识，本文有些地方参考了他人的文章，如果本文有不对之处欢迎指出。如果这篇文章对你有帮助，欢迎点赞👍。**\n\n","createTime":1636120113781,"creativeType":"original","description":"最近在做一个主页时需要用国际化，用HTML+JS，还有jQuery, 于是就选择了jquery.i18n.properties.js。本文介绍的示例还依赖jquery、jquery.json。\n\n 介绍\n\njquery.i18n.properties是一款轻量级的国际化插件，采用.properties文件来对javascript文件进行国际化，即根据用户指定的语言和国家编码来解析对应的","headerImg":"//file.vwood.xyz/2022/07/11/upload_szlm7ei8gajfb9ohl0t3c3wbhyt95658.jpg","id":"ab32d3ed-a398-4594-ade7-1c076303eda8","isDeleted":false,"likeCount":0,"name":"jquery.i18n.properties的使用讲解与实例","operator":{"avatar":"//file.vwood.xyz/2022/07/13/upload_xtola9p0z8ctzyg5g014tfmjkokb7ydq.jpg","description":"一个懒惰、躺平的程序员","github":"https://github.com/abelce","id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["jquery","i18n","properties"],"updateTime":1668228573172,"viewCount":235},"id":"ab32d3ed-a398-4594-ade7-1c076303eda8","latestArticleList":[{"id":"b8997e5c-988d-4f9b-9637-143bf0219042","name":"Macos已损坏，无法打开。 您应该将它移到废纸篓。","tags":[],"description":"","content":""},{"id":"26d50f26-364c-4989-a661-0dcbe063ad89","name":"前端原生API识别条形码","tags":[],"description":"","content":""},{"id":"fefb5ef1-b0be-441b-93c7-80907d0d4399","name":"Web Notifcation介绍","tags":[],"description":"","content":""},{"id":"fbccb2e8-8934-4ffb-b205-0bdde8a8c61f","name":"js实现页面title闪烁","tags":[],"description":"","content":""},{"id":"466b23fe-2f73-44b1-9e97-fe552c793e80","name":"css outline","tags":[],"description":"","content":""}]},"initialMobxState":{"userStore":{"currentUser":null,"users":[],"token":"","qiniuToken":"","userCount":0,"productCount":0,"commentCount":0,"settingType":"products"},"productStore":{"products":[],"total":0,"type":"","url":"","current":1,"product":null,"likesMap":{},"tabpane":"all","token":"","loading":false,"todayHunters":[],"today":[],"yesterday":[],"relatedProducts":[],"search":""},"commentStore":{"comments":[],"total":0,"current":0},"noteStore":{"token":"","notes":[],"total":0,"note":null},"askStore":{"token":"","asks":[],"total":0,"ask":null},"stypeStore":{"data":[]}},"__N_SSG":true}