{"pageProps":{"current":4,"blogs":[{"content":"","createTime":1650510288910,"creativeType":"original","description":"\n\n滚动加载数据就是说在达到某个条件的时候自动触发加载数据的动作，通常是滚动到页面底部的时候加载数据；\n\n代码如下：\n\njs\n  handleScroll = (e) ={\n    let layout = document.getElementById(\"layout\");\n\n    if (layout.clientHeight + layout.scrollTop >= layou","id":"131d0d16-5692-403b-b949-87426c3d3f47","isDeleted":false,"likeCount":0,"name":"js 实现滚动加载数据","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":[],"updateTime":1658063851344,"viewCount":181},{"content":"","createTime":1636124890100,"creativeType":"original","description":"\n本文主要是结合自己在学习中使用css来实现图片的宽高自适应，并给出相应的结局方案。\n\n 场景\n\n给定一系列图片，图片宽高不等，每行所展示的图片数量不等，如何实现图片的自适应。\n\n\n\n 实现方法\n\n聪明的你肯定会想到使用flex布局，并且设置flex-wrap: wrap。但如何做到自适应宽度呢：\n\n我们假设图片原始宽度、高度分别为width、heigh","id":"3891106a-2cff-4d0d-8efb-1930d43d48bc","isDeleted":false,"likeCount":0,"name":"如何使用css实现图片宽高自适应","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":[],"updateTime":1658063691299,"viewCount":203},{"content":"","createTime":1636124673209,"creativeType":"original","description":"css实现文子颜色动态变化\n\n先看一下实际效果\n\n![在这里插入图片描述](https:file.vwood.xyz/2022/07/11/upload_wp5lk3zr88du1d6hhrpazda4mubtk40y.gif)\n\n\n\n实现代码\n\ncss\n.flow {\n    height: 120px;\n    background: linear-gradient(to right","id":"80a03a38-9f10-4cec-ac5d-138bd220ae3a","isDeleted":false,"likeCount":0,"name":"css实现文字颜色动态变化","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":[],"updateTime":1658063681331,"viewCount":205},{"content":"","createTime":1652795036062,"creativeType":"original","description":">在画图工具中需要判断两个矩形是否相交\n\n<img src=\"https:file.vwood.xyz/2022/07/11/upload_ec1otndjo2fzjidbl1gncufpba4orxdy.png\" style=\"zoom:40%\">\n\n如上有两个矩形，中心点分别为O1(x1、y1)、O2(x2、y2)，宽高分别为(w1、h1)和(w2、h2)；\n\n要判断两个矩形是否相交，可以","id":"ca307ea2-ce5f-46ea-8fdb-95fad4fd725b","isDeleted":false,"likeCount":0,"name":"判断两个矩形相交","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["矩形","相交"],"updateTime":1658063670222,"viewCount":234},{"content":"","createTime":1638020962954,"creativeType":"original","description":" minio 安装过程\n\n\n\n在使用minio前试过nextcloud，反复折腾后有问题，就转向了minio，minio的安装还是非常顺利\n\n\n\nDocker-compose.yml\n\nyml\n  minio:\n    image: \"minio/minio\"\n    hostname: minio\n    restart: always\n    volumes:\n      - ","id":"6691aca2-4e55-4403-a656-bd82eb45a5db","isDeleted":false,"likeCount":0,"name":"minio 安装过程","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":[],"updateTime":1658063660432,"viewCount":247},{"content":"","createTime":1639749255267,"creativeType":"original","description":"以前看很多博客文章，都用mac的窗口样式把图片或者文章包裹起来，话空闲时间自己也做了一个\n\n效果如下：\n<img src=\"https:file.vwood.xyz/2022/07/11/upload_54eierzmnj1z3vd2got8jxkq2b7onuie.png\" style=\"zoom: 0.5\"/>\n\n安装：\njs\nnpm install -S vwin-eazy-win","id":"e29e4fd7-0d1e-441b-ac98-d5fe674eb865","isDeleted":false,"likeCount":0,"name":"mac窗口的插件vwin-eazy-win","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["mac","窗口"],"updateTime":1658063650584,"viewCount":242},{"content":"","createTime":1636120113781,"creativeType":"original","description":"最近在做一个主页时需要用国际化，用HTML+JS，还有jQuery, 于是就选择了jquery.i18n.properties.js。本文介绍的示例还依赖jquery、jquery.json。\n\n 介绍\n\njquery.i18n.properties是一款轻量级的国际化插件，采用.properties文件来对javascript文件进行国际化，即根据用户指定的语言和国家编码来解析对应的","id":"ab32d3ed-a398-4594-ade7-1c076303eda8","isDeleted":false,"likeCount":0,"name":"jquery.i18n.properties的使用讲解与实例","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["jquery","i18n","properties"],"updateTime":1658063638854,"viewCount":235},{"content":"","createTime":1653301833072,"creativeType":"original","description":" 介绍\n\nMobx-state-tree（简称MST）是基于mobx的响应式状态管理工具，核心思想就是一个动态树，每个树由一个结构和一个状态组成，支持状态的序列化、反序列化、时间旅行等功能。\n\n 使用\njs\nnpm install mobx mobx-state-tree --save\n\n或\njs\nyarn add mobx mobx-state-tree\n\n\n","id":"fbf0032a-b12f-422e-b042-e2b2f76bd7d8","isDeleted":false,"likeCount":0,"name":"Mobx-state-tree介绍","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["Mobx-state-tree","MST"],"updateTime":1658063629623,"viewCount":354},{"content":"","createTime":1636124941393,"creativeType":"original","description":"\n以前在做医疗靶区勾画时用到过这个算法，现在总结一下，介绍引射线法。\n 1、原理\n\n从目标点引一条射线，判断这条线与曲线的交点个数为奇数还是偶数，为奇数表示点在曲线内，偶数表示点在曲线外。\n\n![](https:file.vwood.xyz/2022/07/11/upload_koljvu4z8nzo0nbd1hto3m4oh3k2224w.png)\n\n\njs代码如下：\nja","id":"6e887be0-491d-437b-a554-dae164940cbb","isDeleted":false,"likeCount":0,"name":"判断一个点是否在闭合曲线内","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["闭合","js"],"updateTime":1658063620968,"viewCount":202},{"content":"","createTime":1658030817856,"creativeType":"original","description":"\n :not()在平时的工作中使用的频率还是蛮高的，今天总结记录一下它的用法和处于实验性的用法。\n\n:not()用来匹配不符合一组选择器的元素，防止特定的元素被选中，也被称为反选伪类。但是不能使用<code>:not(:not)</code>的写法。\n\ncss:\n\n css\nvw {\n  color: 666;\n  display: block;\n}\nvw:not(.v","id":"67eb1db1-28cf-4ae6-9263-5aea9cb8b55e","isDeleted":false,"likeCount":0,"name":"css伪类:not用法","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["not","多参数","前端"],"updateTime":1658050169458,"viewCount":86}],"latestBlogs":[{"id":"d4d53b2b-e674-43d0-9b6c-e88bbfea75f4","name":"css aspect-ratio使用","tags":[],"description":"","content":""},{"id":"204fab9b-434c-47fd-83cc-787a142e9309","name":"前端websocket中定时器使用","tags":[],"description":"","content":""},{"id":"28379fc5-a74f-428a-a849-35145a4f7c93","name":"Error: Cannot access contents of url \"\". Extension manifest must request permission to access this host.","tags":[],"description":"","content":""},{"id":"b543b2a1-6acf-4468-b9f4-14c54304c67c","name":"blob:http:// 的理解","tags":[],"description":"","content":""},{"id":"2df18b82-732d-4e55-b0e3-18d0e6a53ed2","name":"upyun nodejs上传文件","tags":[],"description":"","content":""},{"id":"1f8598cd-9fdb-4d7c-b6b7-7cbca6424f20","name":"mac 命令行启动docker","tags":[],"description":"","content":""},{"id":"d142839e-7615-4266-874e-20da660013ed","name":"ECDSA host key for xx.xx.xx.xx has changed and you have requested strict checking. Host key verification failed.","tags":[],"description":"","content":""},{"id":"dd1b2427-b982-453e-9974-343efc09233b","name":"mac docker-compose up 报错","tags":[],"description":"","content":""},{"id":"bce956aa-267f-4f66-98cf-c52eb3f79752","name":"组件库与项目react版本冲突","tags":[],"description":"","content":""},{"id":"03b49f83-d393-4473-aacb-9b4e61651482","name":"error TS2300: Duplicate identifier 'LibraryManagedAttributes'.","tags":[],"description":"","content":""}],"total":69},"initialMobxState":{"userStore":{"currentUser":null,"users":[],"token":"","qiniuToken":"","userCount":0,"productCount":0,"commentCount":0,"settingType":"products"},"productStore":{},"commentStore":{},"noteStore":{},"askStore":{},"stypeStore":{}},"__N_SSG":true}