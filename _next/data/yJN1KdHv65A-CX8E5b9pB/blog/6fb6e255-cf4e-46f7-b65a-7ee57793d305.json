{"pageProps":{"data":{"category":{"id":"01c2bf92-d615-4600-9f0a-64db28de7345","name":"React"},"content":"在业务开发过程中，有时需要使用iframe，比如通过iframe来模拟页面，或者隔离样式。\n\n## 渲染iframe\n下面的方式使用iframe是不生效的\n```tsx\n<iframe>\n    <div></div>\n</iframe>\n```\n因为iframe就相当于一个新的页面，所以要把组件添加渲染到iframe内部的dom上才有效果。\n所以通过`srcDoc`设置iframe的初始html，iframe挂在后再把子组件动态挂载到`iframe-root`节点即可。\n\n```ts\n   <iframe\n      srcDoc={`\n      <!DOCTYPE html>\n      <html>\n        <meta charset=\"UTF-8\">\n        <head>\n        </head>\n        <body><div id=\"iframe-root\"></div></body>\n      </html>\n      `}\n    >\n    </iframe>\n```\n\n当iframe挂载完成（就是`onload`事件调用后），使用`createPortal`将组件插入到iframe内部，代码如下：\n\n``` ts\n// 省略后的代码\nconst target = doc.querySelector(mountSelector || \"#iframe-root\");\nif (!target) {\n    return null;\n}\nreturn createPortal(typeof children === \"function\" ? children() : children, target);\n```\n上面将子组件渲染到了iframe中，但是会发现样式没有起作用，没起作用就对了，因为样式在站点加载了，但是iframe中没有加载样式。\n\n## 样式处理\n通常样式打包完成后时直接挂在站点的html上的，iframe拿不到样式，页面就会错乱。比如下面的简历模版\n![](WX20231027-171730.png)\n\n可以看到，布局发生了错乱。\n\n那么就需要将样式添加到iframe中，方式很多，比如如下几种：\n1. 将站点的`head`标签的内容全部插入到iframe的`head`，，这种最简单\n2. 将站点的`head`标签的内的`style`以及`link`中的样式全部插入到iframe中，相比第一种插入的内容会少很多\n3. 打包的时候将要插入的组件的样式分离出来，打包成字符串或者单独的css文件，渲染时插入到iframe的`head`中，推荐该方式。\n\n## 代码实现\n直接上代码\n\nMyIframe组件代码\n\n```tsx\n// MyIframe\nimport {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { createPortal } from \"react-dom\";\n\nexport default memo(\n  forwardRef<HTMLIFrameElement, any>(\n    (props, forwardRef): JSX.Element => {\n      const {\n        srcDoc,\n        mountSelector,\n        children,\n        title = \"\",\n        ...resetComplete\n      } = props;\n      const _frameRef = useRef<HTMLIFrameElement>(null);\n      const [loaded, setLoaded] = useState(false);\n\n      const iframeSrcDoc = useMemo(() => {\n        return (\n          srcDoc ||\n          `\n          <!DOCTYPE html>\n          <html>\n            <meta charset=\"UTF-8\">\n            <head>\n            </head>\n            <body><div id=\"iframe-root\"></div></body>\n          </html>\n        `\n        );\n      }, [srcDoc]);\n\n      useEffect(() => {\n        if (forwardRef) {\n          if (typeof forwardRef === \"function\") {\n            forwardRef(_frameRef.current);\n          } else {\n            forwardRef.current = _frameRef.current;\n          }\n        }\n      }, [forwardRef]);\n\n      const getDocument = useCallback(() => {\n        return _frameRef.current?.contentWindow?.document || null;\n      }, []);\n\n      const onLoad = useCallback(() => {\n        if (!loaded) {\n          props.onLoad?.(getDocument());\n          setLoaded(true);\n        }\n      }, [getDocument, loaded, props]);\n\n      const renderContent = useCallback(() => {\n        const doc = getDocument();\n        if (!doc) {\n          return null;\n        }\n        const target = doc.querySelector(mountSelector || \"#iframe-root\");\n        if (!target) {\n          return null;\n        }\n        return createPortal(\n          typeof children === \"function\" ? children(doc) : children,\n          target\n        );\n      }, [getDocument, children, mountSelector]);\n\n      return (\n        <iframe\n          {...resetComplete}\n          title={title}\n          srcDoc={iframeSrcDoc}\n          ref={_frameRef}\n          onLoad={onLoad}\n        >\n          {loaded && renderContent()}\n        </iframe>\n      );\n    }\n  )\n);\n```\n使用MyIFrame\n\n```tsx\nconst IframePreview = (props) => {\n\n    const onLoad = (doc) => {\n        // iframe unload事件\n        // 可以处理样式等操作\n    }\n    return (\n        <MyIframe\n        // srcDoc 设置iframe初始内容\n        srcDoc={`\n        <!DOCTYPE html>\n        <html>\n            <meta charset=\"UTF-8\">\n            <head>\n            </head>\n            <body><div id=\"iframe-root\"></div></body>\n        </html>\n        `}\n        onLoad={onLoad}\n        >\n        {(doc) => <div>content</div>}\n        </MyIframe>\n    );\n};\n```\n上面的代码可以直接运行。\n\n## 总结\n一个iframe的使用主要分为如下两步：\n1. 使用iframe\n2. iframe的onload执行后，将内容渲染到iframe中，同时添加样式\n\n我的简历模版就是使用的iframe来实现，如有兴趣可以看看 [模版中心](https://cv.vwood.xyz/themes)\n   \n","createTime":1698559711171,"creativeType":"reprint","description":"在业务开发过程中，有时需要使用iframe，比如通过iframe来模拟页面，或者隔离样式。\n\n 渲染iframe\n下面的方式使用iframe是不生效的\ntsx\n<iframe>\n    <div></div>\n</iframe>\n\n因为iframe就相当于一个新的页面，所以要把组件添加渲染到iframe内部的dom上才有效果。\n所以通过srcDoc设置iframe的初始html","headerImg":"","id":"6fb6e255-cf4e-46f7-b65a-7ee57793d305","isDeleted":false,"likeCount":0,"name":"iframe在react中的使用","operator":{"avatar":"//file.vwood.xyz/2023/06/11/upload_ssaf3w2dlo0xox7alrcrca1704a6j2fn.jpg","description":"","email":"1061225829@qq.com","github":"https://github.com/abelce","id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorId":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["iframe","react"],"updateTime":1698559711171,"viewCount":0},"id":"6fb6e255-cf4e-46f7-b65a-7ee57793d305","latestArticleList":[{"id":"136338ed-c1f7-4127-ac2e-095c694cbb67","name":"升级macOS 13 Ventura系统后打开软件提示“已损坏，无法打开”解决方法","tags":[],"description":"","content":""},{"id":"ea2e43d0-d2c1-433e-b74f-1a163becef9d","name":"使用importmap实现在线代码编辑","tags":[],"description":"","content":""},{"id":"460fb164-5722-4cc2-ad6b-c35d5be4a670","name":"js提取iconfont项目的图标","tags":[],"description":"","content":""},{"id":"0517a4cb-be8a-47a5-b7c2-da7904a4ba67","name":"docker使用postgres","tags":[],"description":"","content":""},{"id":"cd89eea1-6839-499b-8573-5a487afc48ef","name":"babel配置文件加载","tags":[],"description":"","content":""}]},"initialMobxState":{"userStore":{"currentUser":null,"users":[],"token":"","qiniuToken":"","userCount":0,"productCount":0,"commentCount":0,"settingType":"products"},"productStore":{"products":[],"total":0,"type":"","url":"","current":1,"product":null,"likesMap":{},"tabpane":"all","token":"","loading":false,"todayHunters":[],"today":[],"yesterday":[],"relatedProducts":[],"search":""},"commentStore":{"comments":[],"total":0,"current":0},"noteStore":{"token":"","notes":[],"total":0,"note":null},"askStore":{"token":"","asks":[],"total":0,"ask":null},"stypeStore":{"data":[]}},"__N_SSG":true}