{"pageProps":{"current":1,"blogs":[{"content":"","createTime":1702711607932,"creativeType":"original","description":"\n\n在ES module中可以通过import来引入模块，通过相对或者绝对路径加载.\njs\nimport lodash from \"https:esm.sh/lodash\";\n\n\n可当使用webpack等打包工具时明知需要使用 import lodash from \"lodash\"的方式就能加载对应的文件，这些工具通过nodejs在构建时映射到特定的文件，就能解决模块自动加","headerImg":"","id":"ea2e43d0-d2c1-433e-b74f-1a163becef9d","isDeleted":false,"likeCount":0,"name":"使用importmap实现在线代码编辑","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorId":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["importmap"],"updateTime":1702711752107,"url":"","viewCount":0},{"content":"","createTime":1701357079611,"creativeType":"original","description":"iconfont 可以让我们轻松使用字体图标，比如使用 iconfont 提供的 js，就可以愉快的码代码了。\n\nhtml\nat.alicdn.com/t/c/font_xxxxx.js\n\n\n通常公司会有提供一套图标供所有系统使用，比如图标库里有 1000 个图标，但某个项目只需要使用 10 个，但 js 文件包含了所有的图标，就有点浪费网络资源了。比如下面只用了第一行的图标，其他","headerImg":"","id":"460fb164-5722-4cc2-ad6b-c35d5be4a670","isDeleted":false,"likeCount":0,"name":"js提取iconfont项目的图标","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorId":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["iconfont","图标提取"],"updateTime":1701357079611,"url":"","viewCount":0},{"content":"","createTime":1701270093890,"creativeType":"original","description":"记录个人开发过程中postgres在docker中的使用\n\n Dockerfile\n个人是在M1电脑上开发，所以platform使用linux/amd64来兼容amd芯片。\n\nshell\nFROM --platform=linux/amd64 postgres:16.1-alpine\nCOPY ./poetrydb.sql /docker-entrypoint-initdb.d/","headerImg":"","id":"0517a4cb-be8a-47a5-b7c2-da7904a4ba67","isDeleted":false,"likeCount":0,"name":"docker使用postgres","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorId":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["docker","postgres"],"updateTime":1701270093890,"url":"","viewCount":0},{"content":"","createTime":1701183454740,"creativeType":"original","description":"遇到大型时项目，git可能超时，可以通过设置超时时间解决\n\n http.timeout\n设置超时时间，单位为秒。\nshell\ngit config --global http.timeout 30\n\n\n http.postBuffer\n除了设置超时时间外，还可以设置缓存区，大型项目去要更多的缓存区， 单位为byte\nshell\ngit config --globa","headerImg":"","id":"7b2f60f3-7b3e-4889-8062-30323d2af5cf","isDeleted":false,"likeCount":0,"name":"git设置超时设置","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorId":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["git超时","timeout","postBuffer","lowSpeedLimit","lowSpeedTime"],"updateTime":1701269799934,"url":"","viewCount":0},{"content":"","createTime":1701269781781,"creativeType":"original","description":"本文主要讲述babel的配置文件及其加载过程。\n\nbabel在解析文件前会先加载配置信息，然后根据配置信息对源代码进行处理。\n\n babel配置文件\nbabel配置文件[Config Files](https:babeljs.io/docs/config-files)\n\nbabel有两种配置文件，可以配合使用，也可以单独使用:\n\n+ 项目范围的配置\n  + babel.config.*","headerImg":"","id":"cd89eea1-6839-499b-8573-5a487afc48ef","isDeleted":false,"likeCount":0,"name":"babel配置文件加载","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorId":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["babel","config"],"updateTime":1701269781781,"url":"","viewCount":0},{"content":"","createTime":1701269736527,"creativeType":"original","description":"\ntypescript已经成为前端日常开发中常用的工具之一，本文结合自己的使用做一下笔记，方便以后查阅。\n\n\n Partial\nPartial可以将某个类型中定义的属性变成可选的.\n下面的定义了Book类型，创建实力时如果不设置id属性就会提示错误。\n\ntypescript\ntype Book = {\n  id: string;\n  name: string;\n};\n\nconst","headerImg":"","id":"ef3bf6e0-6e9f-4704-8b9d-cdd4d1fa7a91","isDeleted":false,"likeCount":0,"name":"typescript使用","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorId":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["typescript","Partial","infer"],"updateTime":1701269736527,"url":"","viewCount":0},{"content":"","createTime":1699974017797,"creativeType":"original","description":"本文主要讲述babel的配置文件及其加载过程。\n\nbabel在解析文件前会先加载配置信息，然后根据配置信息对源代码进行处理。\n\n babel配置文件\nbabel配置文件[Config Files](https:babeljs.io/docs/config-files)\n\nbabel有两种配置文件，可以配合使用，也可以单独使用:\n\n+ 项目范围的配置\n  + babel.config.*","headerImg":"","id":"fac66413-5460-4a89-93dd-2a287ee1d14e","isDeleted":false,"likeCount":0,"name":"babel配置文件加载过程","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorId":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["babel","babelrc","babel.config"],"updateTime":1699974039852,"url":"","viewCount":0},{"content":"","createTime":1692453681241,"creativeType":"original","description":"\n 介绍\n[Jotai](https:jotai.org/docs/introduction)是一种原子化的状态管理方案。采用的 Atom + hook + Context的方式来解决React的数据管理。\n\n当Atom更新的时候不会触发Context的更新，只会更新订阅了Atom的组件。\n\nJotai 有一个非常小的 API，并且是面向 TypeScript 的。 它","headerImg":"//file.vwood.xyz/2023/08/20/upload_sv0wcr8j84x8y9atlbdl8yhz6w85vpgs.png","id":"705e62c8-4c77-47af-bee2-2cb4eabb7948","isDeleted":false,"likeCount":0,"name":"jotai原理篇","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorId":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["jotai","状态管理"],"updateTime":1699773548753,"url":"","viewCount":0},{"content":"","createTime":1698561025965,"creativeType":"original","description":"在开发组件过程中，偶尔需要动态的插入css，比如在在iframe中渲染组件后，iframe中是没有样式的，所以需要手动插入样式。\n\n 插入样式\n\n通常是在useLayoutEffect中动态创建style标签\n\nts\n  useLayoutEffect(() ={\n    if (!ref.current) {\n      const style = document.creat","headerImg":"","id":"2d304261-a68b-4cf2-bbab-56efec4ba707","isDeleted":false,"likeCount":0,"name":"react动态插入样式","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorId":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["useStyle","let-hooks"],"updateTime":1698569961467,"url":"","viewCount":0},{"content":"","createTime":1695048707338,"creativeType":"original","description":"一个react hooks库，方便自己日常开发和使用","headerImg":"","id":"8052bec4-7240-4068-864d-243e8b71d918","isDeleted":false,"likeCount":0,"name":"自己打造的react hooks库: let-hooks","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorId":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["react","hooks","let-hooks"],"updateTime":1698560047426,"url":"","viewCount":0}],"latestBlogs":[{"id":"ea2e43d0-d2c1-433e-b74f-1a163becef9d","name":"使用importmap实现在线代码编辑","tags":[],"description":"","content":""},{"id":"460fb164-5722-4cc2-ad6b-c35d5be4a670","name":"js提取iconfont项目的图标","tags":[],"description":"","content":""},{"id":"0517a4cb-be8a-47a5-b7c2-da7904a4ba67","name":"docker使用postgres","tags":[],"description":"","content":""},{"id":"cd89eea1-6839-499b-8573-5a487afc48ef","name":"babel配置文件加载","tags":[],"description":"","content":""},{"id":"ef3bf6e0-6e9f-4704-8b9d-cdd4d1fa7a91","name":"typescript使用","tags":[],"description":"","content":""},{"id":"7b2f60f3-7b3e-4889-8062-30323d2af5cf","name":"git设置超时设置","tags":[],"description":"","content":""},{"id":"fac66413-5460-4a89-93dd-2a287ee1d14e","name":"babel配置文件加载过程","tags":[],"description":"","content":""},{"id":"2d304261-a68b-4cf2-bbab-56efec4ba707","name":"react动态插入样式","tags":[],"description":"","content":""},{"id":"6fb6e255-cf4e-46f7-b65a-7ee57793d305","name":"iframe在react中的使用","tags":[],"description":"","content":""},{"id":"faa29859-b26c-4737-af1c-f37ff0a7eafc","name":"依赖注入","tags":[],"description":"","content":""}],"total":104},"initialMobxState":{"userStore":{"currentUser":null,"users":[],"token":"","qiniuToken":"","userCount":0,"productCount":0,"commentCount":0,"settingType":"products"},"productStore":{"products":[],"total":0,"type":"","url":"","current":1,"product":null,"likesMap":{},"tabpane":"all","token":"","loading":false,"todayHunters":[],"today":[],"yesterday":[],"relatedProducts":[],"search":""},"commentStore":{"comments":[],"total":0,"current":0},"noteStore":{"token":"","notes":[],"total":0,"note":null},"askStore":{"token":"","asks":[],"total":0,"ask":null},"stypeStore":{"data":[]}},"__N_SSG":true}