{"pageProps":{"current":6,"blogs":[{"content":"","createTime":1653616780770,"creativeType":"original","description":"替换下载链接的域名为\n\nvscode.cdn.azure.cn\n\n","id":"2dc0659e-57e4-480d-922e-55a1c050dde2","isDeleted":false,"likeCount":0,"name":"vscode 下载慢解决方案","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["vscode","下载慢"],"updateTime":1653616780770,"viewCount":144},{"content":"","createTime":1636124621057,"creativeType":"original","description":"\n 判断文件是否存在\nfunc DirExist(path string) (bool, error) {\n\t_, err := os.Stat(path)\n\tif err == nil {\n\t\treturn true, nil\n\t}\n\t 判断报错是否是因为文件不存在引起的\n\tif os.IsNotExist(err) {\n\t\treturn false, nil\n\t}\n\treturn","id":"515a02b7-68e4-49e8-9673-dd6bc4597875","isDeleted":false,"likeCount":0,"name":"golang判断文件夹是否存在","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":[],"updateTime":1653016156888,"viewCount":147},{"content":"","createTime":1652236038127,"creativeType":"original","description":"oninput、onchange，onblur的执行时机\n\n oninput\n\n输入数据的时候触发\n\n onchange\n\n值发生改变鼠标失焦后触发，在onblur之前","id":"a52d4239-28cb-4664-a6e9-41185883c913","isDeleted":false,"likeCount":0,"name":"oninput、onchange，onblur的执行时机","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["oninput","onchange"],"updateTime":1652236038127,"viewCount":166},{"content":"","createTime":1651221218801,"creativeType":"original","description":"\n\n是由于空格、换行引起的\n\n\n <div class=\"container\">\n        <span class=\"item\">131313131313131</span>\n        <span class=\"item\">131313131313131</span>\n        <!-- <div class=\"subfix\"></div-->\n      </div>","id":"c15302a1-bf8c-486a-a40b-020db96cbbc6","isDeleted":false,"likeCount":0,"name":"html  行内元素引起的空白间距问题","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":[],"updateTime":1651221218801,"viewCount":170},{"content":"","createTime":1650615253403,"creativeType":"original","description":"[臆病な魔女](https:www.yui540.graphics/site)","id":"3cd3d279-0893-4965-9876-199955b92ec5","isDeleted":false,"likeCount":0,"name":"动画惊艳的网站","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["动画","惊艳","好看"],"updateTime":1650615266935,"viewCount":170},{"content":"","createTime":1636124774866,"creativeType":"original","description":"\n\n\n在公司构建用户个人站点的过程中使用使用到了模版template，在此总结一下\n\n\n\n 一、为什么要使用静态页面\n\n 页面应用对于在站点SEO方面存在局限性，而用户又希望可以通过SEO来增加网站的权重，所以使用了静态页面\n\n\n\n 二、解析过程\n\n用到的函数\n\ngolang\nfunc (t *Template) New(name string) *Template\n","id":"fed62dd1-74a4-4b6d-9ae7-4be678e1e6f2","isDeleted":false,"likeCount":0,"name":"golang模版解析","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["template"],"updateTime":1650613834346,"viewCount":166},{"content":"","createTime":1637589268526,"creativeType":"original","description":"\ngit checkout master  要覆盖的分支\ngit reset --hard dev  用本地的dev覆盖master\ngit push origin master --force  推送到远程仓库\n","id":"3ae42760-f417-4778-9dee-fe6a7c857334","isDeleted":false,"likeCount":0,"name":"git覆盖分支","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["git"],"updateTime":1650586340679,"viewCount":143},{"content":"","createTime":1638019490396,"creativeType":"original","description":" css var()的使用\n\nvar()函数可以代替元素中任何属性中的值的任何部分\n\n\nvar( <custom-property-name, <declaration-value>? )\n\n\n+ 第一个参数为自定义属性值的名称\n+ 后面的value表示第一个属性值无效时的默认值\n\n\n\ncss\n.component {\n  --text-color: 080;\n}\n","id":"e304071f-dfe3-4b90-aead-14ed5249f72e","isDeleted":false,"likeCount":0,"name":"css var()的使用","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["css","换行"],"updateTime":1650538156864,"viewCount":164},{"content":"","createTime":1647057305960,"creativeType":"original","description":"antd upload 组件上传时有时会报如下错误\n\nantd upload  Provisional headers are shown\n\n在请求头中添加如下代码\njs\n'X-Requested-With': null\n\n表示使用传统的同步请求","id":"0fa6f565-0ef1-4cce-aad1-81a79e0bb43d","isDeleted":false,"likeCount":0,"name":"antd upload  Provisional headers are shown","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":[],"updateTime":1650512072627,"viewCount":136},{"content":"","createTime":1638108162541,"creativeType":"original","description":"在写npm脚本的时候需要在脚本的第一行写上<code>!/usr/bin/env node</code，用于指明该脚本文件要使用node来执行。\n\n<code>/usr/bin/env</code> 用来告诉用户到path目录下去寻找node，<code>!/usr/bin/env node</code> 可以让系统动态的去查找node，已解决不同机器不同用户设置不一致问题。\n\nPS： 该","id":"9d0c9024-c867-4764-84b6-bc899260cc3d","isDeleted":false,"likeCount":0,"name":"#!/usr/bin/env node的理解","operator":{"id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":[],"updateTime":1650512009698,"viewCount":162}],"latestBlogs":[{"id":"1f8598cd-9fdb-4d7c-b6b7-7cbca6424f20","name":"mac 命令行启动docker","tags":[],"description":"","content":""},{"id":"d142839e-7615-4266-874e-20da660013ed","name":"ECDSA host key for xx.xx.xx.xx has changed and you have requested strict checking. Host key verification failed.","tags":[],"description":"","content":""},{"id":"dd1b2427-b982-453e-9974-343efc09233b","name":"mac docker-compose up 报错","tags":[],"description":"","content":""},{"id":"bce956aa-267f-4f66-98cf-c52eb3f79752","name":"组件库与项目react版本冲突","tags":[],"description":"","content":""},{"id":"03b49f83-d393-4473-aacb-9b4e61651482","name":"error TS2300: Duplicate identifier 'LibraryManagedAttributes'.","tags":[],"description":"","content":""},{"id":"3f166e04-5e23-47c4-a8bb-c9e6c812ba34","name":"关于vwood","tags":[],"description":"","content":""},{"id":"67eb1db1-28cf-4ae6-9263-5aea9cb8b55e","name":"css伪类:not用法","tags":[],"description":"","content":""},{"id":"38abab46-1f1d-47e0-9f3d-aeafdf41a0e7","name":"js 实现 LRU缓存","tags":[],"description":"","content":""},{"id":"02eea954-494c-4c35-8f80-d34e70f87807","name":"低代码文章收集","tags":[],"description":"","content":""},{"id":"f6ea6c70-76ba-40fa-9f5b-792afbf7fe8b","name":"记又拍云接入过程","tags":[],"description":"","content":""}],"total":64},"initialMobxState":{"userStore":{"currentUser":null,"users":[],"token":"","qiniuToken":"","userCount":0,"productCount":0,"commentCount":0,"settingType":"products"},"productStore":{},"commentStore":{},"noteStore":{},"askStore":{},"stypeStore":{}},"__N_SSG":true}