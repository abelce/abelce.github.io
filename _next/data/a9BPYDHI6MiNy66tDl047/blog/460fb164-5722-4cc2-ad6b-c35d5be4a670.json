{"pageProps":{"data":{"category":{"id":"dbd1fcd9-e77e-44ad-b845-306c97bcdb4a","name":"js"},"content":"iconfont 可以让我们轻松使用字体图标，比如使用 iconfont 提供的 js，就可以愉快的码代码了。\n\n```html\n//at.alicdn.com/t/c/font_xxxxx.js\n```\n\n通常公司会有提供一套图标供所有系统使用，比如图标库里有 1000 个图标，但某个项目只需要使用 10 个，但 js 文件包含了所有的图标，就有点浪费网络资源了。比如下面只用了第一行的图标，其他的都不需要。\n\n![](https://file.vwood.xyz/2023/11/30/upload_fxl1cr4dovd9o061u4kesn0huu3eh95v.png)\n\n另一种场景是组件库，组件库引入了 iconfont 的 js 文件，加在了全部图标，这对于组件库来说是不能接受的；\n当然可以手动将需要的图标一个一个放到组件库中，这样不止费劲后，还容易出错。\n\n所以可不可以将图标自动提取出来，然后按需引入。\n\n## 图标提取实现\n\n先来看看 js 文件里图标是怎样存在的，可以看到所有的图标都放在一个`svg`里面，每个图标由`symbol`包裹起来，并且都有`id`属性，咱们就可以根据这些信息将图标从字符串里弄出来。\n\n![](https://file.vwood.xyz/2023/11/30/upload_j06zx65jmsv8xiet50bfxefv5eop03m5.png)\n\n所以，正则表达式可以这么写:\n\n```js\nconst svgReg = /<symbol[^>]*>(<path[^<]*><\\/path>)+<\\/symbol>/gi;\n```\n\n然后遍历提取出来的`symbol`，转成`svg`即可，`id`可以作为图标的名称。\n\n将 iconfont 的 js 文件字符串传递进`createSVGFromSymbol`，替换掉`symbol`、`id`、`fill`等属性。\n\n```js\nconst createSVGFromSymbol = (str) => {\n  // 提取图标\n  const symbolList = str.match(svgReg);\n\n  const svgList: Array<string[]> = [];\n  symbolList.forEach((sym: string) => {\n    const svg = sym\n      // 替换开始标签\n      .replace(/^<symbol/, `<svg xmlns=\"http://www.w3.org/2000/svg\" `)\n      // 结束标签\n      .replace(/<\\/symbol>$/, \"</svg>\")\n      // 删除 id\n      .replace(/ id=\"(.*?)\" /, \"\")\n      // 删除 fill属性\n      .replace(/ fill=\"(.*?)\"/g, \"\");\n  });\n  return svgList;\n};\n```\n\n比如这个图标代码:\n\n```html\n<symbol id=\"icon-close\" viewBox=\"0 0 1024 1024\">\n  <path\n    d=\"M557.312 513.248l265.28-263.904c12.544-12.48 12.608-32.704 0.128-45.248-12.512-12.576-32.704-12.608-45.248-0.128l-265.344 263.936-263.04-263.84C236.64 191.584 216.384 191.52 203.84 204 191.328 216.48 191.296 236.736 203.776 249.28l262.976 263.776L201.6 776.8c-12.544 12.48-12.608 32.704-0.128 45.248 6.24 6.272 14.464 9.44 22.688 9.44 8.16 0 16.32-3.104 22.56-9.312l265.216-263.808 265.44 266.24c6.24 6.272 14.432 9.408 22.656 9.408 8.192 0 16.352-3.136 22.592-9.344 12.512-12.48 12.544-32.704 0.064-45.248L557.312 513.248z\"\n  >\n  </path>\n</symbol>\n```\n\n转换之后就是这样子了\n\n```html\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1024 1024\">\n  <path\n    d=\"M557.312 513.248l265.28-263.904c12.544-12.48 12.608-32.704 0.128-45.248-12.512-12.576-32.704-12.608-45.248-0.128l-265.344 263.936-263.04-263.84C236.64 191.584 216.384 191.52 203.84 204 191.328 216.48 191.296 236.736 203.776 249.28l262.976 263.776L201.6 776.8c-12.544 12.48-12.608 32.704-0.128 45.248 6.24 6.272 14.464 9.44 22.688 9.44 8.16 0 16.32-3.104 22.56-9.312l265.216-263.808 265.44 266.24c6.24 6.272 14.432 9.408 22.656 9.408 8.192 0 16.352-3.136 22.592-9.344 12.512-12.48 12.544-32.704 0.064-45.248L557.312 513.248z\"\n  ></path>\n</svg>\n```\n\n同时可以将`id`提取出来，作为保存 svg 文件时的文件名，所以代码就变成下面的样子了。\n\n```js\n\n// 将空格/- 去掉，转换成驼峰\nconst processSvgName = (name = ''): string[] => {\n  return name\n    // 替换-_\n    .replace(/-/g, ' ')\n    .replace(/_/g, ' ')\n    .split(' ')\n    .filter((str) => !!str)\n    .map((item) => item.toLowerCase())\n    // 转换成驼峰\n    .map((str: string) => {\n      if (str.length > 1) {\n        return str[0].toUpperCase() + str.slice(1);\n      }\n      return str[0].toUpperCase();\n    })\n    .join('')\n};\n\nconst createSVGFromSymbol = (prefix: string, str: string): Array<string[]> => {\n  const symbolList = str.match(svgReg);\n  if (symbolList) {\n    const svgList: Array<string[]> = [];\n    symbolList.forEach((sym: string) => {\n      const idMatchResult = sym.match(/ id=\"(.*?)\" /);\n      if (idMatchResult && idMatchResult.length >= 2) {\n        const svgNameArr = processSvgName(\n          idMatchResult[1].replace('icon-', ''),\n        );\n        svgList.push([\n          svgNameArr,\n          sym\n            .replace(/^<symbol/, `<svg xmlns=\"http://www.w3.org/2000/svg\" `)\n            .replace(/<\\/symbol>$/, '</svg>')\n            // remove id\n            .replace(/ id=\"(.*?)\" /, ''),\n             // remove fill attribute\n            .replace(/ fill=\"(.*?)\"/g, '')\n        ]);\n      }\n    });\n    return svgList;\n  }\n  return [];\n};\n```\n\n这样所有的图标都提取出来了。\n\n当然可以根据业务的需要再转换成对应的组件，比如我平时主要使用`React`开发，就可以同时生成对应的`React`组件，一个图标库就搞定了。\n每次图标需要更新时运行脚本就即可，剩下的时间才能摸鱼。\n\n当然我做了一个 npm 包[iconfont-extract](https://www.npmjs.com/package/iconfont-extract)，方便在其他项目中使用。\n","createTime":1701357079611,"creativeType":"original","description":"iconfont 可以让我们轻松使用字体图标，比如使用 iconfont 提供的 js，就可以愉快的码代码了。\n\nhtml\nat.alicdn.com/t/c/font_xxxxx.js\n\n\n通常公司会有提供一套图标供所有系统使用，比如图标库里有 1000 个图标，但某个项目只需要使用 10 个，但 js 文件包含了所有的图标，就有点浪费网络资源了。比如下面只用了第一行的图标，其他","headerImg":"","id":"460fb164-5722-4cc2-ad6b-c35d5be4a670","isDeleted":false,"likeCount":0,"name":"js提取iconfont项目的图标","operator":{"avatar":"//file.vwood.xyz/2023/06/11/upload_ssaf3w2dlo0xox7alrcrca1704a6j2fn.jpg","description":"","email":"1061225829@qq.com","github":"https://github.com/abelce","id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorId":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["iconfont","图标提取"],"updateTime":1701357079611,"viewCount":0},"id":"460fb164-5722-4cc2-ad6b-c35d5be4a670","latestArticleList":[{"id":"ea2e43d0-d2c1-433e-b74f-1a163becef9d","name":"使用importmap实现在线代码编辑","tags":[],"description":"","content":""},{"id":"460fb164-5722-4cc2-ad6b-c35d5be4a670","name":"js提取iconfont项目的图标","tags":[],"description":"","content":""},{"id":"0517a4cb-be8a-47a5-b7c2-da7904a4ba67","name":"docker使用postgres","tags":[],"description":"","content":""},{"id":"cd89eea1-6839-499b-8573-5a487afc48ef","name":"babel配置文件加载","tags":[],"description":"","content":""},{"id":"ef3bf6e0-6e9f-4704-8b9d-cdd4d1fa7a91","name":"typescript使用","tags":[],"description":"","content":""}]},"initialMobxState":{"userStore":{"currentUser":null,"users":[],"token":"","qiniuToken":"","userCount":0,"productCount":0,"commentCount":0,"settingType":"products"},"productStore":{"products":[],"total":0,"type":"","url":"","current":1,"product":null,"likesMap":{},"tabpane":"all","token":"","loading":false,"todayHunters":[],"today":[],"yesterday":[],"relatedProducts":[],"search":""},"commentStore":{"comments":[],"total":0,"current":0},"noteStore":{"token":"","notes":[],"total":0,"note":null},"askStore":{"token":"","asks":[],"total":0,"ask":null},"stypeStore":{"data":[]}},"__N_SSG":true}